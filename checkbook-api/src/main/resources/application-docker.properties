# Docker-specific configuration for Checkbook API

# Server Configuration
server.port=8080
server.servlet.context-path=/api

# Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/checkbook}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:checkbook_user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:checkbook_password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true

# Mail Configuration (MailHog)
spring.mail.host=${SPRING_MAIL_HOST:mailhog}
spring.mail.port=${SPRING_MAIL_PORT:1025}
spring.mail.username=${SPRING_MAIL_USERNAME:}
spring.mail.password=${SPRING_MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH:false}
spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE:false}
spring.mail.properties.mail.smtp.ssl.enable=false

# JWT Configuration
jwt.secret=${JWT_SECRET:your-super-secret-jwt-key-for-development-only-change-in-production}
jwt.expiration=${JWT_EXPIRATION:86400000}

# Application Configuration
app.name=Checkbook API
app.version=1.0.0
app.base-url=${APP_BASE_URL:http://localhost:3000}

# CORS Configuration
app.cors.allowed-origins=${APP_BASE_URL:http://localhost:3000},http://localhost:5173
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allow-credentials=true
app.cors.max-age=3600

# Logging Configuration
logging.level.com.checkbook=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Logging Pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Log Files
logging.file.name=/app/logs/checkbook-api.log
logging.file.max-size=10MB
logging.file.max-history=30

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.health.db.enabled=true

# Custom Health Check
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# Jackson Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC

# Redis Configuration
spring.data.redis.host=${SPRING_DATA_REDIS_HOST:redis}
spring.data.redis.port=${SPRING_DATA_REDIS_PORT:6379}
spring.data.redis.password=${SPRING_DATA_REDIS_PASSWORD:}
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000

# Request Logging Configuration
app.logging.enabled=true
app.logging.log-headers=false
app.logging.log-body=false

# Rate Limiting Configuration (for development, uses in-memory storage)
app.rate-limiting.enabled=true
app.rate-limiting.login-attempts=5
app.rate-limiting.login-window-minutes=15
app.rate-limiting.register-attempts=3
app.rate-limiting.register-window-minutes=60
app.rate-limiting.password-reset-attempts=3
app.rate-limiting.password-reset-window-minutes=60